[{"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/index.js":"1","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/App.js":"2","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/reportWebVitals.js":"3","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/TodoForm.jsx":"4","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/TodoList.jsx":"5","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/Todo.jsx":"6"},{"size":500,"mtime":1613852556428,"results":"7","hashOfConfig":"8"},{"size":203,"mtime":1613857647993,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1613852615643,"results":"10","hashOfConfig":"8"},{"size":855,"mtime":1613892321164,"results":"11","hashOfConfig":"8"},{"size":1321,"mtime":1613897944988,"results":"12","hashOfConfig":"8"},{"size":1087,"mtime":1613914899210,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hu3hes",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/index.js",[],["28","29"],"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/App.js",[],"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/reportWebVitals.js",[],"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/TodoForm.jsx",[],"/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/TodoList.jsx",["30","31"],"import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\n\nexport default function Todolist(props) {\n    const [todos, setTodos] =useState([])\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n          }\n          const newTodos = [todo, ...todos]\n          setTodos(newTodos)\n        //   console.log(\"...todos\", ...todos);\n    }\n\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n          }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n        );\n    }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id != id);\n        setTodos(removeArr);\n    }\n\n    const completeTodo = id => {\n        let uddateTodos = todos.map(todo => {\n            if (todo.id === id) {\n                return todo\n            }\n        });\n        setTodos(uddateTodos);\n    }\n    return (\n        <>\n        <h3>Liste des éléments useState</h3>\n        <TodoForm onSubmit={addTodo}/>\n        <Todo\n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo = {removeTodo}\n            updateTodo = {updateTodo}\n\n        />\n           \n        </>\n    )\n}\n","/Users/thibaultbrasseur/Documents/CODE/ReactApp/CoursCode/cloneFromGithub/React-Hook-CRUD-useState-/src/components/Todo.jsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":28,"column":61,"nodeType":"38","messageId":"39","endLine":28,"endColumn":63},{"ruleId":"40","severity":1,"message":"41","line":33,"column":42,"nodeType":"42","messageId":"43","endLine":33,"endColumn":44},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]